import styled from "@emotion/styled";
import "bootstrap/dist/css/bootstrap.min.css";
import type { AppProps } from "next/app";
import Head from "next/head";
import { useRouter } from "next/router";
import { Fragment, useCallback, useEffect, useMemo, useState } from "react";
import { Button } from "react-bootstrap";
import { Footer, Header, Loading } from "../components";
import { sanityClient } from "../sanity";
import "../styles/globals.css";

type Props = {
  products: any[];
};

function MyApp({ Component, pageProps }: AppProps<Props>) {
  const router = useRouter();
  const [showScrollToTop, setShowScrollToTop] = useState<boolean>(false);
  const [statusProgress, setStatusProgress] = useState({
    isRouteChanging: false,
    loadingKey: 0,
  });

  /**
   * Handle scroll
   * @return void
   */
  const handleScroll = useCallback(() => {
    if (
      document.body.scrollTop > 300 ||
      document.documentElement.scrollTop > 300
    ) {
      setShowScrollToTop(true);
    } else {
      setShowScrollToTop(false);
    }
  }, []);

  /**
   * Handle scroll to top
   * @return void
   */
  const handleScrollToTop = useCallback(() => {
    document.body.scrollTop = 0; // For Safari
    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
  }, []);

  /**
   * Handle change route start
   * @return void
   */
  const handleRouteChangeStart = () => {
    setStatusProgress((prevState) => ({
      ...prevState,
      isRouteChanging: true,
      loadingKey: prevState.loadingKey ^ 1,
    }));
  };

  /**
   * Handle change route end
   * @return void
   */
  const handleRouteChangeEnd = () => {
    setStatusProgress((prevState) => ({
      ...prevState,
      isRouteChanging: false,
    }));
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);

    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  useEffect(() => {
    router.events.on("routeChangeStart", handleRouteChangeStart);
    router.events.on("routeChangeComplete", handleRouteChangeEnd);
    router.events.on("routeChangeError", handleRouteChangeEnd);

    return () => {
      router.events.off("routeChangeStart", handleRouteChangeStart);
      router.events.off("routeChangeComplete", handleRouteChangeEnd);
      router.events.off("routeChangeError", handleRouteChangeEnd);
    };
  }, [router.events]);

  return useMemo(
    () => (
      <Fragment>
        <Head>
          <title>Sinotech</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
            integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
            crossOrigin="anonymous"
            referrerPolicy="no-referrer"
          />
        </Head>
        <Loading
          isRouteChanging={statusProgress.isRouteChanging}
          key={statusProgress.loadingKey}
        />
        <div className="min-vh-100">
          {/* Header Area */}
          <Header />

          {/* Body Area */}

          <Component {...pageProps} />

          {/* Footer Area */}
          <Footer />

          {/* Phone absolute bottom left*/}
          <PhoneRingStyled className="text-decoration-none">
            <div className="d-flex align-items-center phone-ring-container">
              <div className="phone-ring-wrapper">
                <div className="ring">
                  <div className="coccoc-alo-phone coccoc-alo-green coccoc-alo-show">
                    <div className="coccoc-alo-ph-circle"></div>
                    <div className="coccoc-alo-ph-circle-fill"></div>
                    <div className="coccoc-alo-ph-img-circle"></div>
                  </div>
                </div>
              </div>
              <div className="number-phone">0999.999.999</div>
            </div>
          </PhoneRingStyled>

          <ScrollToTopStyled
            style={{
              display: showScrollToTop ? "block" : "none",
            }}
            onClick={handleScrollToTop}
          >
            <i className="fa fa-angle-up" />
          </ScrollToTopStyled>
        </div>
      </Fragment>
    ),
    [
      Component,
      handleScrollToTop,
      pageProps,
      showScrollToTop,
      statusProgress.isRouteChanging,
      statusProgress.loadingKey,
    ]
  );
}

export default MyApp;

export const getServerSideProps = async () => {
  const query = `*[_type == 'product']`;

  const products = await sanityClient.fetch(query);

  return {
    props: {
      products,
    },
  };
};

const PhoneRingStyled = styled.a`
  position: fixed;
  bottom: 4px;
  left: -3rem;
  z-index: 9999999;
  .coccoc-alo-ph-circle {
    width: 160px;
    height: 160px;
    top: 20px;
    left: 20px;
    position: absolute;
    background-color: transparent;
    -webkit-border-radius: 100%;
    -moz-border-radius: 100%;
    border-radius: 100%;
    border: 2px solid rgba(30, 30, 30, 0.4);
    opacity: 0.1;
    -webkit-animation: coccoc-alo-circle-anim 1.2s infinite ease-in-out;
    -moz-animation: coccoc-alo-circle-anim 1.2s infinite ease-in-out;
    -ms-animation: coccoc-alo-circle-anim 1.2s infinite ease-in-out;
    -o-animation: coccoc-alo-circle-anim 1.2s infinite ease-in-out;
    animation: coccoc-alo-circle-anim 1.2s infinite ease-in-out;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
    -o-transition: all 0.5s;
    transition: all 0.5s;
  }

  .coccoc-alo-phone {
    background-color: transparent;
    width: 260px;
    height: 140px;
    cursor: pointer;
    z-index: 200000 !important;
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);
    -webkit-transition: visibility 0.5s;
    -moz-transition: visibility 0.5s;
    -o-transition: visibility 0.5s;
    transition: visibility 0.5s;
    right: 150px;
    top: 40px;
  }

  .coccoc-alo-phone.coccoc-alo-green .coccoc-alo-ph-circle-fill {
    background-color: #f86a3f;
  }

  .coccoc-alo-ph-circle-fill {
    width: 100px;
    height: 100px;
    top: 50px;
    left: 50px;
    position: absolute;
    background-color: #000;
    -webkit-border-radius: 100%;
    -moz-border-radius: 100%;
    border-radius: 100%;
    border: 2px solid transparent;
    opacity: 0.1;
    -webkit-animation: coccoc-alo-circle-fill-anim 2.3s infinite ease-in-out;
    -moz-animation: coccoc-alo-circle-fill-anim 2.3s infinite ease-in-out;
    -ms-animation: coccoc-alo-circle-fill-anim 2.3s infinite ease-in-out;
    -o-animation: coccoc-alo-circle-fill-anim 2.3s infinite ease-in-out;
    animation: coccoc-alo-circle-fill-anim 2.3s infinite ease-in-out;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
    -o-transition: all 0.5s;
    transition: all 0.5s;
  }

  .coccoc-alo-ph-img-circle {
    width: 60px;
    height: 60px;
    top: 70px;
    left: 70px;
    position: absolute;
    background: rgba(30, 30, 30, 0.1)
      url(https://drive.google.com/uc?id=1V3N2b79QjDWetC_ss9wI3c-xpWDymn9R)
      no-repeat center center;
    -webkit-border-radius: 100%;
    -moz-border-radius: 100%;
    border-radius: 100%;
    border: 2px solid transparent;
    -webkit-animation: coccoc-alo-circle-img-anim 1s infinite ease-in-out;
    -moz-animation: coccoc-alo-circle-img-anim 1s infinite ease-in-out;
    -ms-animation: coccoc-alo-circle-img-anim 1s infinite ease-in-out;
    -o-animation: coccoc-alo-circle-img-anim 1s infinite ease-in-out;
    animation: coccoc-alo-circle-img-anim 1s infinite ease-in-out;
  }

  .coccoc-alo-phone.coccoc-alo-green .coccoc-alo-ph-img-circle {
    background-color: #f86a3f;
  }

  .coccoc-alo-phone.coccoc-alo-green .coccoc-alo-ph-circle {
    border-color: #f86a3f;
  }

  .number-phone {
    background-color: #f86a3f;
    margin-left: -140px;
    margin-top : 60px;
    padding: 3px 1rem;
    border-top-right-radius: 10px;
    border-bottom-right-radius: 10px;
    color: white;
    font-size: 14px;
  }

  .phone-ring-container {
    &:hover {
      .number-phone {
        background-color: #00aff2;
      }
      .coccoc-alo-phone.coccoc-alo-green.coccoc-alo-hover .coccoc-alo-ph-circle,
      .coccoc-alo-phone.coccoc-alo-green:hover .coccoc-alo-ph-circle {
        border-color: #00aff2;
        opacity: 0.5;
      }

      .coccoc-alo-phone.coccoc-alo-green.coccoc-alo-hover
        .coccoc-alo-ph-circle-fill,
      .coccoc-alo-phone.coccoc-alo-green:hover .coccoc-alo-ph-circle-fill {
        background-color: #00aff2;
        opacity: 0.75 !important;
      }

      .coccoc-alo-phone.coccoc-alo-green.coccoc-alo-hover
        .coccoc-alo-ph-img-circle,
      .coccoc-alo-phone.coccoc-alo-green:hover .coccoc-alo-ph-img-circle {
        background-color: #00aff2;
      }
    }
  }

  @-moz-keyframes coccoc-alo-circle-anim {
    0% {
      transform: rotate(0) scale(0.5) skew(1deg);
      opacity: 0.1;
    }
    30% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.5;
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.1;
    }
  }

  @-webkit-keyframes coccoc-alo-circle-anim {
    0% {
      transform: rotate(0) scale(0.5) skew(1deg);
      opacity: 0.1;
    }
    30% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.5;
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.1;
    }
  }

  @-o-keyframes coccoc-alo-circle-anim {
    0% {
      transform: rotate(0) scale(0.5) skew(1deg);
      opacity: 0.1;
    }
    30% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.5;
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.1;
    }
  }

  @keyframes coccoc-alo-circle-anim {
    0% {
      transform: rotate(0) scale(0.5) skew(1deg);
      opacity: 0.1;
    }
    30% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.5;
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.1;
    }
  }

  @-moz-keyframes coccoc-alo-circle-fill-anim {
    0% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.2;
    }
    100% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
  }

  @-webkit-keyframes coccoc-alo-circle-fill-anim {
    0% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.2;
    }
    100% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
  }

  @-o-keyframes coccoc-alo-circle-fill-anim {
    0% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.2;
    }
    100% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
  }

  @keyframes coccoc-alo-circle-fill-anim {
    0% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
      opacity: 0.2;
    }
    100% {
      transform: rotate(0) scale(0.7) skew(1deg);
      opacity: 0.2;
    }
  }

  @-moz-keyframes coccoc-alo-circle-img-anim {
    0% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    10% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    20% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    30% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    40% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
    }
  }

  @-webkit-keyframes coccoc-alo-circle-img-anim {
    0% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    10% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    20% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    30% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    40% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
    }
  }

  @-o-keyframes coccoc-alo-circle-img-anim {
    0% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    10% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    20% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    30% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    40% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
    }
  }

  @keyframes coccoc-alo-circle-img-anim {
    0% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    10% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    20% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    30% {
      transform: rotate(-25deg) scale(1) skew(1deg);
    }
    40% {
      transform: rotate(25deg) scale(1) skew(1deg);
    }
    50% {
      transform: rotate(0) scale(1) skew(1deg);
    }
    100% {
      transform: rotate(0) scale(1) skew(1deg);
    }
  }
`;

const ScrollToTopStyled = styled(Button)`
  width: 50px;
  height: 50px;
  position: fixed; /* Fixed/sticky position */
  bottom: 20px; /* Place the button at the bottom of the page */
  right: 1rem; /* Place the button 30px from the right */
  z-index: 99; /* Make sure it does not overlap */
  border: none; /* Remove borders */
  outline: none; /* Remove outline */
  background-color: red; /* Set a background color */
  color: white; /* Text color */
  cursor: pointer; /* Add a mouse pointer on hover */
  border-radius: 50px; /* Rounded corners */
  font-size: 18px; /* Increase font size */
`;
